
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and bool_ define div equal fun_ greater id if_ lpr minus mod mul not number or plus print_bool print_num rpr smallerPROGRAM : STMT_PLUSSTMT_PLUS    : STMT\n                    | STMT STMT_PLUSSTMT : EXPSTMT : DEF_STMTSTMT : PRINT_STMTPRINT_STMT : lpr print_num EXP rprPRINT_STMT : lpr print_bool EXP rprEXP : bool_EXP : numberEXP : VARIABLEEXP : NUM_OPEXP : LOGICAL_OPEXP : FUN_EXPEXP : FUN_CALLEXP : IF_EXPVARIABLE : idNUM_OP   : PLUS\n                | MINUS\n                | MULTIPLY\n                | DIVIDE\n                | MODULUS\n                | GREATER\n                | SMALLER\n                | EQUALPLUS : lpr plus EXP PLUS_EXP_PLUS rprPLUS_EXP_PLUS : EXPPLUS_EXP_PLUS : EXP PLUS_EXP_PLUSMINUS : lpr minus EXP EXP rprMULTIPLY : lpr mul EXP MUL_EXP_PLUS rprMUL_EXP_PLUS : EXPMUL_EXP_PLUS : EXP MUL_EXP_PLUSDIVIDE : lpr div EXP EXP rprMODULUS : lpr mod EXP EXP rprGREATER : lpr greater EXP EXP rprSMALLER : lpr smaller EXP EXP rprEQUAL : lpr equal EXP EQUAL_EXP_PLUS rprEQUAL_EXP_PLUS   : EXPEQUAL_EXP_PLUS   : EXP EQUAL_EXP_PLUSLOGICAL_OP : AND_OP\n                  | OR_OP\n                  | NOT_OPAND_OP : lpr and EXP AND_EXP_PLUS rprAND_EXP_PLUS : EXPAND_EXP_PLUS : EXP AND_EXP_PLUSOR_OP : lpr or EXP OR_EXP_PLUS rprOR_EXP_PLUS  : EXPOR_EXP_PLUS  : EXP OR_EXP_PLUSNOT_OP : lpr not EXP rprDEF_STMT : lpr define VARIABLE EXP rprFUN_EXP : lpr fun_ FUN_IDs FUN_BODY rprFUN_IDs  : lpr rprFUN_IDs  : lpr ID_PLUS rprID_PLUS  : idID_PLUS  : id ID_PLUSFUN_BODY  : EXPFUN_BODY  : DEF_STMT_PLUS EXPDEF_STMT_PLUS : DEF_STMTDEF_STMT_PLUS : DEF_STMT_PLUS DEF_STMTFUN_CALL : lpr FUN_EXP rprFUN_CALL : lpr FUN_EXP PARAM_PLUS rprFUN_CALL : lpr FUN_NAME rprFUN_CALL : lpr FUN_NAME PARAM_PLUS rprPARAM : EXPPARAM_PLUS   : PARAMPARAM_PLUS   : PARAM PARAM_PLUSFUN_NAME  : idIF_EXP : lpr if_ TEST_EXP THEN_EXP ELSE_EXP rprTEST_EXP : EXPTHEN_EXP : EXPELSE_EXP : EXP'
    
_lr_action_items = {'bool_':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,83,84,85,87,88,89,90,93,99,101,103,105,106,107,109,111,116,117,119,120,121,122,123,125,127,129,130,],[7,7,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-67,7,7,-60,7,-64,-62,7,-69,7,7,7,7,7,7,7,7,7,7,-7,-8,-52,7,-58,-61,-63,7,-70,7,7,7,7,7,-49,-50,-53,-51,-59,-26,-29,-30,-33,-34,-35,-36,-37,-43,-46,-68,]),'number':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,83,84,85,87,88,89,90,93,99,101,103,105,106,107,109,111,116,117,119,120,121,122,123,125,127,129,130,],[8,8,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-67,8,8,-60,8,-64,-62,8,-69,8,8,8,8,8,8,8,8,8,8,-7,-8,-52,8,-58,-61,-63,8,-70,8,8,8,8,8,-49,-50,-53,-51,-59,-26,-29,-30,-33,-34,-35,-36,-37,-43,-46,-68,]),'lpr':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,80,83,84,85,87,88,89,90,93,99,101,103,105,106,107,109,111,112,116,117,119,120,121,122,123,125,127,129,130,],[15,15,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,50,50,53,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-67,50,29,80,-60,50,-64,-62,50,-69,50,50,50,50,50,50,50,50,50,50,-7,-8,-52,29,112,-58,-61,-63,50,-70,50,50,50,50,50,-49,-50,-53,-51,-59,29,-26,-29,-30,-33,-34,-35,-36,-37,-43,-46,-68,]),'id':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,79,80,83,84,85,87,88,89,90,93,99,101,103,105,106,107,109,111,112,116,117,119,120,121,122,123,125,127,129,130,],[16,16,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-67,16,48,79,16,-60,16,-64,-62,16,-69,16,16,16,16,16,16,16,16,16,16,-7,-8,-52,79,48,16,-58,-61,-63,16,-70,16,16,16,16,16,-49,-50,-53,-51,-59,48,-26,-29,-30,-33,-34,-35,-36,-37,-43,-46,-68,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,55,59,75,76,85,87,105,106,109,116,117,119,120,121,122,123,125,127,129,130,],[0,-1,-2,-4,-5,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,-3,-60,-62,-7,-8,-61,-63,-49,-50,-51,-26,-29,-30,-33,-34,-35,-36,-37,-43,-46,-68,]),'rpr':([7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,34,35,48,51,52,53,55,56,57,58,59,60,73,74,78,79,81,82,85,86,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,],[-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-40,-41,-42,55,59,-67,75,76,77,-60,85,-65,-64,-62,87,105,106,107,-54,109,-56,-61,-66,-63,-27,116,117,-31,119,120,121,122,123,-38,125,-44,127,-47,129,-49,-55,-51,-57,130,-71,-28,-26,-29,-32,-30,-33,-34,-35,-36,-39,-37,-45,-43,-48,-46,-68,]),'define':([15,80,112,],[30,30,30,]),'print_num':([15,],[31,]),'print_bool':([15,],[32,]),'fun_':([15,29,50,80,112,],[33,33,33,33,33,]),'if_':([15,50,80,112,],[36,36,36,36,]),'plus':([15,50,80,112,],[37,37,37,37,]),'minus':([15,50,80,112,],[38,38,38,38,]),'mul':([15,50,80,112,],[39,39,39,39,]),'div':([15,50,80,112,],[40,40,40,40,]),'mod':([15,50,80,112,],[41,41,41,41,]),'greater':([15,50,80,112,],[42,42,42,42,]),'smaller':([15,50,80,112,],[43,43,43,43,]),'equal':([15,50,80,112,],[44,44,44,44,]),'and':([15,50,80,112,],[45,45,45,45,]),'or':([15,50,80,112,],[46,46,46,46,]),'not':([15,50,80,112,],[47,47,47,47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'STMT_PLUS':([0,3,],[2,28,]),'STMT':([0,3,],[3,3,]),'EXP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[4,4,51,52,58,58,62,63,64,65,66,67,68,69,70,71,72,73,74,82,58,89,90,92,93,95,96,97,98,99,101,103,110,114,90,93,99,101,103,]),'DEF_STMT':([0,3,54,83,],[5,5,84,111,]),'PRINT_STMT':([0,3,],[6,6,]),'VARIABLE':([0,3,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[9,9,49,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NUM_OP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LOGICAL_OP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FUN_EXP':([0,3,15,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,54,57,61,63,64,65,66,67,68,69,70,71,72,80,83,88,90,93,99,101,103,112,],[12,12,34,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,12,12,12,12,12,12,34,]),'FUN_CALL':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF_EXP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'PLUS':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'MINUS':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'MULTIPLY':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'DIVIDE':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'MODULUS':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'GREATER':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'SMALLER':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'EQUAL':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'AND_OP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'OR_OP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NOT_OP':([0,3,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,54,57,61,63,64,65,66,67,68,69,70,71,72,83,88,90,93,99,101,103,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FUN_NAME':([15,50,80,112,],[35,35,35,35,]),'FUN_IDs':([33,],[54,]),'PARAM_PLUS':([34,35,57,],[56,60,86,]),'PARAM':([34,35,57,],[57,57,57,]),'TEST_EXP':([36,],[61,]),'ID_PLUS':([53,79,],[78,108,]),'FUN_BODY':([54,],[81,]),'DEF_STMT_PLUS':([54,],[83,]),'THEN_EXP':([61,],[88,]),'PLUS_EXP_PLUS':([63,90,],[91,115,]),'MUL_EXP_PLUS':([65,93,],[94,118,]),'EQUAL_EXP_PLUS':([70,99,],[100,124,]),'AND_EXP_PLUS':([71,101,],[102,126,]),'OR_EXP_PLUS':([72,103,],[104,128,]),'ELSE_EXP':([88,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> STMT_PLUS','PROGRAM',1,'p_PROGRAM','yacc.py',9),
  ('STMT_PLUS -> STMT','STMT_PLUS',1,'p_STMT_PLUS','yacc.py',12),
  ('STMT_PLUS -> STMT STMT_PLUS','STMT_PLUS',2,'p_STMT_PLUS','yacc.py',13),
  ('STMT -> EXP','STMT',1,'p_STMT_exp','yacc.py',17),
  ('STMT -> DEF_STMT','STMT',1,'p_STMT_def','yacc.py',21),
  ('STMT -> PRINT_STMT','STMT',1,'p_STMT_print','yacc.py',24),
  ('PRINT_STMT -> lpr print_num EXP rpr','PRINT_STMT',4,'p_PRINT_STMT_num','yacc.py',29),
  ('PRINT_STMT -> lpr print_bool EXP rpr','PRINT_STMT',4,'p_PRINT_STMT_bool','yacc.py',33),
  ('EXP -> bool_','EXP',1,'p_EXP_bool','yacc.py',38),
  ('EXP -> number','EXP',1,'p_EXP_number','yacc.py',41),
  ('EXP -> VARIABLE','EXP',1,'p_EXP_var','yacc.py',44),
  ('EXP -> NUM_OP','EXP',1,'p_EXP_num_op','yacc.py',47),
  ('EXP -> LOGICAL_OP','EXP',1,'p_EXP_logical_op','yacc.py',50),
  ('EXP -> FUN_EXP','EXP',1,'p_EXP_fun_exp','yacc.py',53),
  ('EXP -> FUN_CALL','EXP',1,'p_EXP_fun_call','yacc.py',56),
  ('EXP -> IF_EXP','EXP',1,'p_EXP_if','yacc.py',59),
  ('VARIABLE -> id','VARIABLE',1,'p_VARIABLE','yacc.py',63),
  ('NUM_OP -> PLUS','NUM_OP',1,'p_NUM_OP','yacc.py',67),
  ('NUM_OP -> MINUS','NUM_OP',1,'p_NUM_OP','yacc.py',68),
  ('NUM_OP -> MULTIPLY','NUM_OP',1,'p_NUM_OP','yacc.py',69),
  ('NUM_OP -> DIVIDE','NUM_OP',1,'p_NUM_OP','yacc.py',70),
  ('NUM_OP -> MODULUS','NUM_OP',1,'p_NUM_OP','yacc.py',71),
  ('NUM_OP -> GREATER','NUM_OP',1,'p_NUM_OP','yacc.py',72),
  ('NUM_OP -> SMALLER','NUM_OP',1,'p_NUM_OP','yacc.py',73),
  ('NUM_OP -> EQUAL','NUM_OP',1,'p_NUM_OP','yacc.py',74),
  ('PLUS -> lpr plus EXP PLUS_EXP_PLUS rpr','PLUS',5,'p_PLUS','yacc.py',78),
  ('PLUS_EXP_PLUS -> EXP','PLUS_EXP_PLUS',1,'p_PLUS_EXP_PLUS_one','yacc.py',83),
  ('PLUS_EXP_PLUS -> EXP PLUS_EXP_PLUS','PLUS_EXP_PLUS',2,'p_PLUS_EXP_PLUS_more','yacc.py',86),
  ('MINUS -> lpr minus EXP EXP rpr','MINUS',5,'p_MINUS','yacc.py',92),
  ('MULTIPLY -> lpr mul EXP MUL_EXP_PLUS rpr','MULTIPLY',5,'p_MULTIPLY','yacc.py',98),
  ('MUL_EXP_PLUS -> EXP','MUL_EXP_PLUS',1,'p_MUL_EXP_PLUS_one','yacc.py',103),
  ('MUL_EXP_PLUS -> EXP MUL_EXP_PLUS','MUL_EXP_PLUS',2,'p_MUL_EXP_PLUS_more','yacc.py',106),
  ('DIVIDE -> lpr div EXP EXP rpr','DIVIDE',5,'p_DIVIDE','yacc.py',112),
  ('MODULUS -> lpr mod EXP EXP rpr','MODULUS',5,'p_MODULUS','yacc.py',118),
  ('GREATER -> lpr greater EXP EXP rpr','GREATER',5,'p_GREATER','yacc.py',124),
  ('SMALLER -> lpr smaller EXP EXP rpr','SMALLER',5,'p_SMALLER','yacc.py',130),
  ('EQUAL -> lpr equal EXP EQUAL_EXP_PLUS rpr','EQUAL',5,'p_EQUAL','yacc.py',136),
  ('EQUAL_EXP_PLUS -> EXP','EQUAL_EXP_PLUS',1,'p_EQUAL_EXP_PLUS_one','yacc.py',145),
  ('EQUAL_EXP_PLUS -> EXP EQUAL_EXP_PLUS','EQUAL_EXP_PLUS',2,'p_EQUAL_EXP_PLUS_more','yacc.py',148),
  ('LOGICAL_OP -> AND_OP','LOGICAL_OP',1,'p_LOGICAL_OP','yacc.py',158),
  ('LOGICAL_OP -> OR_OP','LOGICAL_OP',1,'p_LOGICAL_OP','yacc.py',159),
  ('LOGICAL_OP -> NOT_OP','LOGICAL_OP',1,'p_LOGICAL_OP','yacc.py',160),
  ('AND_OP -> lpr and EXP AND_EXP_PLUS rpr','AND_OP',5,'p_AND_OP','yacc.py',164),
  ('AND_EXP_PLUS -> EXP','AND_EXP_PLUS',1,'p_AND_EXP_PLUS_one','yacc.py',169),
  ('AND_EXP_PLUS -> EXP AND_EXP_PLUS','AND_EXP_PLUS',2,'p_AND_EXP_PLUS_more','yacc.py',172),
  ('OR_OP -> lpr or EXP OR_EXP_PLUS rpr','OR_OP',5,'p_OR_OP','yacc.py',178),
  ('OR_EXP_PLUS -> EXP','OR_EXP_PLUS',1,'p_OR_EXP_PLUS_one','yacc.py',183),
  ('OR_EXP_PLUS -> EXP OR_EXP_PLUS','OR_EXP_PLUS',2,'p_OR_EXP_PLUS_more','yacc.py',186),
  ('NOT_OP -> lpr not EXP rpr','NOT_OP',4,'p_NOT_OP','yacc.py',192),
  ('DEF_STMT -> lpr define VARIABLE EXP rpr','DEF_STMT',5,'p_DEF_STMT','yacc.py',197),
  ('FUN_EXP -> lpr fun_ FUN_IDs FUN_BODY rpr','FUN_EXP',5,'p_FUN_EXP','yacc.py',204),
  ('FUN_IDs -> lpr rpr','FUN_IDs',2,'p_FUN_IDs_no_id','yacc.py',210),
  ('FUN_IDs -> lpr ID_PLUS rpr','FUN_IDs',3,'p_FUN_IDs_ids','yacc.py',213),
  ('ID_PLUS -> id','ID_PLUS',1,'p_ID_PLUS_id_one','yacc.py',216),
  ('ID_PLUS -> id ID_PLUS','ID_PLUS',2,'p_ID_PLUS_id_more','yacc.py',219),
  ('FUN_BODY -> EXP','FUN_BODY',1,'p_FUN_BODY_no_def','yacc.py',223),
  ('FUN_BODY -> DEF_STMT_PLUS EXP','FUN_BODY',2,'p_FUN_BODY_has_def','yacc.py',226),
  ('DEF_STMT_PLUS -> DEF_STMT','DEF_STMT_PLUS',1,'p_DEF_STMT_PLUS_one','yacc.py',234),
  ('DEF_STMT_PLUS -> DEF_STMT_PLUS DEF_STMT','DEF_STMT_PLUS',2,'p_DEF_STMT_PLUS_more','yacc.py',237),
  ('FUN_CALL -> lpr FUN_EXP rpr','FUN_CALL',3,'p_FUN_CALL_exp_no_param','yacc.py',241),
  ('FUN_CALL -> lpr FUN_EXP PARAM_PLUS rpr','FUN_CALL',4,'p_FUN_CALL_exp_params','yacc.py',245),
  ('FUN_CALL -> lpr FUN_NAME rpr','FUN_CALL',3,'p_FUN_CALL_name_no_param','yacc.py',253),
  ('FUN_CALL -> lpr FUN_NAME PARAM_PLUS rpr','FUN_CALL',4,'p_FUN_CALL_name_params','yacc.py',257),
  ('PARAM -> EXP','PARAM',1,'p_PARAM','yacc.py',265),
  ('PARAM_PLUS -> PARAM','PARAM_PLUS',1,'p_PARAM_PLUS_one','yacc.py',268),
  ('PARAM_PLUS -> PARAM PARAM_PLUS','PARAM_PLUS',2,'p_PARAM_PLUS_more','yacc.py',271),
  ('FUN_NAME -> id','FUN_NAME',1,'p_FUN_NAME','yacc.py',274),
  ('IF_EXP -> lpr if_ TEST_EXP THEN_EXP ELSE_EXP rpr','IF_EXP',6,'p_IF_EXP','yacc.py',278),
  ('TEST_EXP -> EXP','TEST_EXP',1,'p_TEST_EXP','yacc.py',286),
  ('THEN_EXP -> EXP','THEN_EXP',1,'p_THEN_EXP','yacc.py',289),
  ('ELSE_EXP -> EXP','ELSE_EXP',1,'p_ELSE_EXP','yacc.py',292),
]
